_format_version: "3.0"

services:
- name: demo
  url: http://httpbin.konghq.com
  routes:
  - name: my-route
    paths:
    - /anything
    strip_path: false
    methods:
    - GET
    - POST
    plugins:
    - name: post-function
      config:
        access:
        - |
          local cjson = require("cjson")

          kong.ctx.shared.from_lua = cjson.encode({
            nested = {
              message = "hello from lua land!",
            },
          })
        header_filter:
        - |
          local cjson = require("cjson")
          local ctx = kong.ctx.shared

          local api_response = ctx.api_response or "null"
          local res = cjson.decode(api_response)

          kong.response.set_header("X-Lua-Encoded-Object", api_response)
          kong.response.set_header("X-Lua-Plugin-Country", res.country)
          kong.response.set_header("X-Lua-Plugin-My-String", ctx.my_string)
          kong.response.set_header("X-Lua-Plugin-My-Encoded-String", ctx.my_encoded_string)
    filter_chains:
    - filters:
      - name: datakit
        config:
          debug: true
          nodes:
          #
          # read "builtin" kong properties
          #
          - name: ROUTE_ID
            type: property
            property: kong.route_id

          - name: SERVICE
            type: property
            property: kong.router.service
            content_type: application/json

          #
          # read some properties set by a Lua plugin
          #
          # NOTE: these depend on the fact that they are being set during the
          # access phase and because Lua plugins run before wasm filters
          #
          - name: LUA_VALUE_ENCODED
            type: property
            property: kong.ctx.shared.from_lua

          - name: LUA_VALUE_DECODED
            type: property
            property: kong.ctx.shared.from_lua
            content_type: application/json

          #
          # make an external API call and stash the result in kong.ctx.shared
          #
          - name: API
            type: call
            url: https://api.zippopotam.us/br/93000-000

          - name: SET_API_RESPONSE
            type: property
            property: kong.ctx.shared.api_response
            input: API.body

          #
          # fetch a property that we know does not exist
          #
          - name: UNSET_PROP
            type: property
            # should return `null`
            property: kong.ctx.shared.nothing_here

          #
          # emit a JSON-encoded string from jq and store it to kong.ctx.shared
          #
          - name: JSON_ENCODED_STRING
            type: jq
            jq: '"my string"'

          # encoded as `my string`
          - name: SET_MY_STRING_PLAIN
            type: property
            input: JSON_ENCODED_STRING
            property: kong.ctx.shared.my_string

          # [JSON-]encoded as `"my string"`
          - name: SET_MY_STRING_ENCODED
            type: property
            input: JSON_ENCODED_STRING
            property: kong.ctx.shared.my_encoded_string
            content_type: application/json

          # get `my string`, return `my string`
          - name: GET_PLAIN_STRING
            type: property
            property: kong.ctx.shared.my_string

          # get `"my string"`, return `"my string"`
          - name: GET_JSON_STRING_ENCODED
            type: property
            property: kong.ctx.shared.my_encoded_string

          # get `"my string"`, decode, return `my string`
          - name: GET_JSON_STRING_DECODED
            type: property
            property: kong.ctx.shared.my_encoded_string
            content_type: application/json

          #
          # assemble a response
          #
          - name: BODY
            type: jq
            inputs:
              # value is also fetched after being set
              API_body: API.body
              SERVICE: SERVICE
              ROUTE_ID: ROUTE_ID
              LUA_VALUE_ENCODED: LUA_VALUE_ENCODED
              LUA_VALUE_DECODED: LUA_VALUE_DECODED
              UNSET_PROP: UNSET_PROP
              GET_PLAIN_STRING: GET_PLAIN_STRING
              GET_JSON_STRING_ENCODED: GET_JSON_STRING_ENCODED
              GET_JSON_STRING_DECODED: GET_JSON_STRING_DECODED
            jq: |
              {
                "API.body": $API_body,
                SERVICE: $SERVICE,
                ROUTE_ID: $ROUTE_ID,
                LUA_VALUE_ENCODED: $LUA_VALUE_ENCODED,
                LUA_VALUE_DECODED: $LUA_VALUE_DECODED,
                UNSET_PROP: $UNSET_PROP,
                GET_PLAIN_STRING: $GET_PLAIN_STRING,
                GET_JSON_STRING_ENCODED: $GET_JSON_STRING_ENCODED,
                GET_JSON_STRING_DECODED: $GET_JSON_STRING_DECODED,
              }

          - name: exit
            type: exit
            inputs:
              body: BODY
